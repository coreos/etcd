// Code generated by protoc-gen-gogo.
// source: request_vote_request.proto
// DO NOT EDIT!

package protobuf

import testing21 "testing"
import math_rand21 "math/rand"
import time21 "time"
import code_google_com_p_gogoprotobuf_proto12 "github.com/coreos/etcd/third_party/code.google.com/p/gogoprotobuf/proto"
import testing22 "testing"
import math_rand22 "math/rand"
import time22 "time"
import encoding_json3 "encoding/json"
import testing23 "testing"
import math_rand23 "math/rand"
import time23 "time"
import code_google_com_p_gogoprotobuf_proto13 "github.com/coreos/etcd/third_party/code.google.com/p/gogoprotobuf/proto"
import math_rand24 "math/rand"
import time24 "time"
import testing24 "testing"
import fmt6 "fmt"
import math_rand25 "math/rand"
import time25 "time"
import testing25 "testing"
import code_google_com_p_gogoprotobuf_proto14 "github.com/coreos/etcd/third_party/code.google.com/p/gogoprotobuf/proto"
import math_rand26 "math/rand"
import time26 "time"
import testing26 "testing"
import fmt7 "fmt"
import go_parser3 "go/parser"
import math_rand27 "math/rand"
import time27 "time"
import testing27 "testing"
import code_google_com_p_gogoprotobuf_proto15 "github.com/coreos/etcd/third_party/code.google.com/p/gogoprotobuf/proto"

func TestRequestVoteRequestProto(t *testing21.T) {
	popr := math_rand21.New(math_rand21.NewSource(time21.Now().UnixNano()))
	p := NewPopulatedRequestVoteRequest(popr, false)
	data, err := code_google_com_p_gogoprotobuf_proto12.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RequestVoteRequest{}
	if err := code_google_com_p_gogoprotobuf_proto12.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseProto %#v, since %v", msg, p, err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRequestVoteRequestMarshalTo(t *testing21.T) {
	popr := math_rand21.New(math_rand21.NewSource(time21.Now().UnixNano()))
	p := NewPopulatedRequestVoteRequest(popr, false)
	size := p.Size()
	data := make([]byte, size)
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	_, err := p.MarshalTo(data)
	if err != nil {
		panic(err)
	}
	msg := &RequestVoteRequest{}
	if err := code_google_com_p_gogoprotobuf_proto12.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseProto %#v, since %v", msg, p, err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkRequestVoteRequestProtoMarshal(b *testing21.B) {
	popr := math_rand21.New(math_rand21.NewSource(616))
	total := 0
	pops := make([]*RequestVoteRequest, 10000)
	for i := 0; i < 10000; i++ {
		pops[i] = NewPopulatedRequestVoteRequest(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto12.Marshal(pops[i%10000])
		if err != nil {
			panic(err)
		}
		total += len(data)
	}
	b.SetBytes(int64(total / b.N))
}

func BenchmarkRequestVoteRequestProtoUnmarshal(b *testing21.B) {
	popr := math_rand21.New(math_rand21.NewSource(616))
	total := 0
	datas := make([][]byte, 10000)
	for i := 0; i < 10000; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto12.Marshal(NewPopulatedRequestVoteRequest(popr, false))
		if err != nil {
			panic(err)
		}
		datas[i] = data
	}
	msg := &RequestVoteRequest{}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += len(datas[i%10000])
		if err := code_google_com_p_gogoprotobuf_proto12.Unmarshal(datas[i%10000], msg); err != nil {
			panic(err)
		}
	}
	b.SetBytes(int64(total / b.N))
}

func TestRequestVoteRequestJSON(t *testing22.T) {
	popr := math_rand22.New(math_rand22.NewSource(time22.Now().UnixNano()))
	p := NewPopulatedRequestVoteRequest(popr, true)
	jsondata, err := encoding_json3.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RequestVoteRequest{}
	err = encoding_json3.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseProto %#v, since %v", msg, p, err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func TestRequestVoteRequestProtoText(t *testing23.T) {
	popr := math_rand23.New(math_rand23.NewSource(time23.Now().UnixNano()))
	p := NewPopulatedRequestVoteRequest(popr, true)
	data := code_google_com_p_gogoprotobuf_proto13.MarshalTextString(p)
	msg := &RequestVoteRequest{}
	if err := code_google_com_p_gogoprotobuf_proto13.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseProto %#v, since %v", msg, p, err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRequestVoteRequestProtoCompactText(t *testing23.T) {
	popr := math_rand23.New(math_rand23.NewSource(time23.Now().UnixNano()))
	p := NewPopulatedRequestVoteRequest(popr, true)
	data := code_google_com_p_gogoprotobuf_proto13.CompactTextString(p)
	msg := &RequestVoteRequest{}
	if err := code_google_com_p_gogoprotobuf_proto13.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseProto %#v, since %v", msg, p, err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRequestVoteRequestStringer(t *testing24.T) {
	popr := math_rand24.New(math_rand24.NewSource(time24.Now().UnixNano()))
	p := NewPopulatedRequestVoteRequest(popr, false)
	s1 := p.String()
	s2 := fmt6.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func TestRequestVoteRequestSize(t *testing25.T) {
	popr := math_rand25.New(math_rand25.NewSource(time25.Now().UnixNano()))
	p := NewPopulatedRequestVoteRequest(popr, true)
	size2 := code_google_com_p_gogoprotobuf_proto14.Size(p)
	data, err := code_google_com_p_gogoprotobuf_proto14.Marshal(p)
	if err != nil {
		panic(err)
	}
	size := p.Size()
	if len(data) != size {
		t.Fatalf("size %v != marshalled size %v", size, len(data))
	}
	if size2 != size {
		t.Fatalf("size %v != before marshal proto.Size %v", size, size2)
	}
	size3 := code_google_com_p_gogoprotobuf_proto14.Size(p)
	if size3 != size {
		t.Fatalf("size %v != after marshal proto.Size %v", size, size3)
	}
}

func BenchmarkRequestVoteRequestSize(b *testing25.B) {
	popr := math_rand25.New(math_rand25.NewSource(616))
	total := 0
	pops := make([]*RequestVoteRequest, 1000)
	for i := 0; i < 1000; i++ {
		pops[i] = NewPopulatedRequestVoteRequest(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += pops[i%1000].Size()
	}
	b.SetBytes(int64(total / b.N))
}

func TestRequestVoteRequestGoString(t *testing26.T) {
	popr := math_rand26.New(math_rand26.NewSource(time26.Now().UnixNano()))
	p := NewPopulatedRequestVoteRequest(popr, false)
	s1 := p.GoString()
	s2 := fmt7.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser3.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func TestRequestVoteRequestVerboseEqual(t *testing27.T) {
	popr := math_rand27.New(math_rand27.NewSource(time27.Now().UnixNano()))
	p := NewPopulatedRequestVoteRequest(popr, false)
	data, err := code_google_com_p_gogoprotobuf_proto15.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RequestVoteRequest{}
	if err := code_google_com_p_gogoprotobuf_proto15.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}

//These tests are generated by code.google.com/p/gogoprotobuf/plugin/testgen
