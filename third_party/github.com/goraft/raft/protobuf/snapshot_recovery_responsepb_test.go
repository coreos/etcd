// Code generated by protoc-gen-gogo.
// source: snapshot_recovery_response.proto
// DO NOT EDIT!

package protobuf

import testing42 "testing"
import math_rand42 "math/rand"
import time42 "time"
import code_google_com_p_gogoprotobuf_proto24 "github.com/coreos/etcd/third_party/code.google.com/p/gogoprotobuf/proto"
import testing43 "testing"
import math_rand43 "math/rand"
import time43 "time"
import encoding_json6 "encoding/json"
import testing44 "testing"
import math_rand44 "math/rand"
import time44 "time"
import code_google_com_p_gogoprotobuf_proto25 "github.com/coreos/etcd/third_party/code.google.com/p/gogoprotobuf/proto"
import math_rand45 "math/rand"
import time45 "time"
import testing45 "testing"
import fmt12 "fmt"
import math_rand46 "math/rand"
import time46 "time"
import testing46 "testing"
import code_google_com_p_gogoprotobuf_proto26 "github.com/coreos/etcd/third_party/code.google.com/p/gogoprotobuf/proto"
import math_rand47 "math/rand"
import time47 "time"
import testing47 "testing"
import fmt13 "fmt"
import go_parser6 "go/parser"
import math_rand48 "math/rand"
import time48 "time"
import testing48 "testing"
import code_google_com_p_gogoprotobuf_proto27 "github.com/coreos/etcd/third_party/code.google.com/p/gogoprotobuf/proto"

func TestSnapshotRecoveryResponseProto(t *testing42.T) {
	popr := math_rand42.New(math_rand42.NewSource(time42.Now().UnixNano()))
	p := NewPopulatedSnapshotRecoveryResponse(popr, false)
	data, err := code_google_com_p_gogoprotobuf_proto24.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &SnapshotRecoveryResponse{}
	if err := code_google_com_p_gogoprotobuf_proto24.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseProto %#v, since %v", msg, p, err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestSnapshotRecoveryResponseMarshalTo(t *testing42.T) {
	popr := math_rand42.New(math_rand42.NewSource(time42.Now().UnixNano()))
	p := NewPopulatedSnapshotRecoveryResponse(popr, false)
	size := p.Size()
	data := make([]byte, size)
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	_, err := p.MarshalTo(data)
	if err != nil {
		panic(err)
	}
	msg := &SnapshotRecoveryResponse{}
	if err := code_google_com_p_gogoprotobuf_proto24.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseProto %#v, since %v", msg, p, err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkSnapshotRecoveryResponseProtoMarshal(b *testing42.B) {
	popr := math_rand42.New(math_rand42.NewSource(616))
	total := 0
	pops := make([]*SnapshotRecoveryResponse, 10000)
	for i := 0; i < 10000; i++ {
		pops[i] = NewPopulatedSnapshotRecoveryResponse(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto24.Marshal(pops[i%10000])
		if err != nil {
			panic(err)
		}
		total += len(data)
	}
	b.SetBytes(int64(total / b.N))
}

func BenchmarkSnapshotRecoveryResponseProtoUnmarshal(b *testing42.B) {
	popr := math_rand42.New(math_rand42.NewSource(616))
	total := 0
	datas := make([][]byte, 10000)
	for i := 0; i < 10000; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto24.Marshal(NewPopulatedSnapshotRecoveryResponse(popr, false))
		if err != nil {
			panic(err)
		}
		datas[i] = data
	}
	msg := &SnapshotRecoveryResponse{}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += len(datas[i%10000])
		if err := code_google_com_p_gogoprotobuf_proto24.Unmarshal(datas[i%10000], msg); err != nil {
			panic(err)
		}
	}
	b.SetBytes(int64(total / b.N))
}

func TestSnapshotRecoveryResponseJSON(t *testing43.T) {
	popr := math_rand43.New(math_rand43.NewSource(time43.Now().UnixNano()))
	p := NewPopulatedSnapshotRecoveryResponse(popr, true)
	jsondata, err := encoding_json6.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &SnapshotRecoveryResponse{}
	err = encoding_json6.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseProto %#v, since %v", msg, p, err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func TestSnapshotRecoveryResponseProtoText(t *testing44.T) {
	popr := math_rand44.New(math_rand44.NewSource(time44.Now().UnixNano()))
	p := NewPopulatedSnapshotRecoveryResponse(popr, true)
	data := code_google_com_p_gogoprotobuf_proto25.MarshalTextString(p)
	msg := &SnapshotRecoveryResponse{}
	if err := code_google_com_p_gogoprotobuf_proto25.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseProto %#v, since %v", msg, p, err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestSnapshotRecoveryResponseProtoCompactText(t *testing44.T) {
	popr := math_rand44.New(math_rand44.NewSource(time44.Now().UnixNano()))
	p := NewPopulatedSnapshotRecoveryResponse(popr, true)
	data := code_google_com_p_gogoprotobuf_proto25.CompactTextString(p)
	msg := &SnapshotRecoveryResponse{}
	if err := code_google_com_p_gogoprotobuf_proto25.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseProto %#v, since %v", msg, p, err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestSnapshotRecoveryResponseStringer(t *testing45.T) {
	popr := math_rand45.New(math_rand45.NewSource(time45.Now().UnixNano()))
	p := NewPopulatedSnapshotRecoveryResponse(popr, false)
	s1 := p.String()
	s2 := fmt12.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func TestSnapshotRecoveryResponseSize(t *testing46.T) {
	popr := math_rand46.New(math_rand46.NewSource(time46.Now().UnixNano()))
	p := NewPopulatedSnapshotRecoveryResponse(popr, true)
	size2 := code_google_com_p_gogoprotobuf_proto26.Size(p)
	data, err := code_google_com_p_gogoprotobuf_proto26.Marshal(p)
	if err != nil {
		panic(err)
	}
	size := p.Size()
	if len(data) != size {
		t.Fatalf("size %v != marshalled size %v", size, len(data))
	}
	if size2 != size {
		t.Fatalf("size %v != before marshal proto.Size %v", size, size2)
	}
	size3 := code_google_com_p_gogoprotobuf_proto26.Size(p)
	if size3 != size {
		t.Fatalf("size %v != after marshal proto.Size %v", size, size3)
	}
}

func BenchmarkSnapshotRecoveryResponseSize(b *testing46.B) {
	popr := math_rand46.New(math_rand46.NewSource(616))
	total := 0
	pops := make([]*SnapshotRecoveryResponse, 1000)
	for i := 0; i < 1000; i++ {
		pops[i] = NewPopulatedSnapshotRecoveryResponse(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += pops[i%1000].Size()
	}
	b.SetBytes(int64(total / b.N))
}

func TestSnapshotRecoveryResponseGoString(t *testing47.T) {
	popr := math_rand47.New(math_rand47.NewSource(time47.Now().UnixNano()))
	p := NewPopulatedSnapshotRecoveryResponse(popr, false)
	s1 := p.GoString()
	s2 := fmt13.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser6.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func TestSnapshotRecoveryResponseVerboseEqual(t *testing48.T) {
	popr := math_rand48.New(math_rand48.NewSource(time48.Now().UnixNano()))
	p := NewPopulatedSnapshotRecoveryResponse(popr, false)
	data, err := code_google_com_p_gogoprotobuf_proto27.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &SnapshotRecoveryResponse{}
	if err := code_google_com_p_gogoprotobuf_proto27.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}

//These tests are generated by code.google.com/p/gogoprotobuf/plugin/testgen
