// Code generated by protoc-gen-gogo.
// source: snapshot_request.proto
// DO NOT EDIT!

package protobuf

import testing49 "testing"
import math_rand49 "math/rand"
import time49 "time"
import code_google_com_p_gogoprotobuf_proto28 "github.com/coreos/etcd/third_party/code.google.com/p/gogoprotobuf/proto"
import testing50 "testing"
import math_rand50 "math/rand"
import time50 "time"
import encoding_json7 "encoding/json"
import testing51 "testing"
import math_rand51 "math/rand"
import time51 "time"
import code_google_com_p_gogoprotobuf_proto29 "github.com/coreos/etcd/third_party/code.google.com/p/gogoprotobuf/proto"
import math_rand52 "math/rand"
import time52 "time"
import testing52 "testing"
import fmt14 "fmt"
import math_rand53 "math/rand"
import time53 "time"
import testing53 "testing"
import code_google_com_p_gogoprotobuf_proto30 "github.com/coreos/etcd/third_party/code.google.com/p/gogoprotobuf/proto"
import math_rand54 "math/rand"
import time54 "time"
import testing54 "testing"
import fmt15 "fmt"
import go_parser7 "go/parser"
import math_rand55 "math/rand"
import time55 "time"
import testing55 "testing"
import code_google_com_p_gogoprotobuf_proto31 "github.com/coreos/etcd/third_party/code.google.com/p/gogoprotobuf/proto"

func TestSnapshotRequestProto(t *testing49.T) {
	popr := math_rand49.New(math_rand49.NewSource(time49.Now().UnixNano()))
	p := NewPopulatedSnapshotRequest(popr, false)
	data, err := code_google_com_p_gogoprotobuf_proto28.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &SnapshotRequest{}
	if err := code_google_com_p_gogoprotobuf_proto28.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseProto %#v, since %v", msg, p, err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestSnapshotRequestMarshalTo(t *testing49.T) {
	popr := math_rand49.New(math_rand49.NewSource(time49.Now().UnixNano()))
	p := NewPopulatedSnapshotRequest(popr, false)
	size := p.Size()
	data := make([]byte, size)
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	_, err := p.MarshalTo(data)
	if err != nil {
		panic(err)
	}
	msg := &SnapshotRequest{}
	if err := code_google_com_p_gogoprotobuf_proto28.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseProto %#v, since %v", msg, p, err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkSnapshotRequestProtoMarshal(b *testing49.B) {
	popr := math_rand49.New(math_rand49.NewSource(616))
	total := 0
	pops := make([]*SnapshotRequest, 10000)
	for i := 0; i < 10000; i++ {
		pops[i] = NewPopulatedSnapshotRequest(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto28.Marshal(pops[i%10000])
		if err != nil {
			panic(err)
		}
		total += len(data)
	}
	b.SetBytes(int64(total / b.N))
}

func BenchmarkSnapshotRequestProtoUnmarshal(b *testing49.B) {
	popr := math_rand49.New(math_rand49.NewSource(616))
	total := 0
	datas := make([][]byte, 10000)
	for i := 0; i < 10000; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto28.Marshal(NewPopulatedSnapshotRequest(popr, false))
		if err != nil {
			panic(err)
		}
		datas[i] = data
	}
	msg := &SnapshotRequest{}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += len(datas[i%10000])
		if err := code_google_com_p_gogoprotobuf_proto28.Unmarshal(datas[i%10000], msg); err != nil {
			panic(err)
		}
	}
	b.SetBytes(int64(total / b.N))
}

func TestSnapshotRequestJSON(t *testing50.T) {
	popr := math_rand50.New(math_rand50.NewSource(time50.Now().UnixNano()))
	p := NewPopulatedSnapshotRequest(popr, true)
	jsondata, err := encoding_json7.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &SnapshotRequest{}
	err = encoding_json7.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseProto %#v, since %v", msg, p, err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func TestSnapshotRequestProtoText(t *testing51.T) {
	popr := math_rand51.New(math_rand51.NewSource(time51.Now().UnixNano()))
	p := NewPopulatedSnapshotRequest(popr, true)
	data := code_google_com_p_gogoprotobuf_proto29.MarshalTextString(p)
	msg := &SnapshotRequest{}
	if err := code_google_com_p_gogoprotobuf_proto29.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseProto %#v, since %v", msg, p, err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestSnapshotRequestProtoCompactText(t *testing51.T) {
	popr := math_rand51.New(math_rand51.NewSource(time51.Now().UnixNano()))
	p := NewPopulatedSnapshotRequest(popr, true)
	data := code_google_com_p_gogoprotobuf_proto29.CompactTextString(p)
	msg := &SnapshotRequest{}
	if err := code_google_com_p_gogoprotobuf_proto29.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseProto %#v, since %v", msg, p, err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestSnapshotRequestStringer(t *testing52.T) {
	popr := math_rand52.New(math_rand52.NewSource(time52.Now().UnixNano()))
	p := NewPopulatedSnapshotRequest(popr, false)
	s1 := p.String()
	s2 := fmt14.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func TestSnapshotRequestSize(t *testing53.T) {
	popr := math_rand53.New(math_rand53.NewSource(time53.Now().UnixNano()))
	p := NewPopulatedSnapshotRequest(popr, true)
	size2 := code_google_com_p_gogoprotobuf_proto30.Size(p)
	data, err := code_google_com_p_gogoprotobuf_proto30.Marshal(p)
	if err != nil {
		panic(err)
	}
	size := p.Size()
	if len(data) != size {
		t.Fatalf("size %v != marshalled size %v", size, len(data))
	}
	if size2 != size {
		t.Fatalf("size %v != before marshal proto.Size %v", size, size2)
	}
	size3 := code_google_com_p_gogoprotobuf_proto30.Size(p)
	if size3 != size {
		t.Fatalf("size %v != after marshal proto.Size %v", size, size3)
	}
}

func BenchmarkSnapshotRequestSize(b *testing53.B) {
	popr := math_rand53.New(math_rand53.NewSource(616))
	total := 0
	pops := make([]*SnapshotRequest, 1000)
	for i := 0; i < 1000; i++ {
		pops[i] = NewPopulatedSnapshotRequest(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += pops[i%1000].Size()
	}
	b.SetBytes(int64(total / b.N))
}

func TestSnapshotRequestGoString(t *testing54.T) {
	popr := math_rand54.New(math_rand54.NewSource(time54.Now().UnixNano()))
	p := NewPopulatedSnapshotRequest(popr, false)
	s1 := p.GoString()
	s2 := fmt15.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser7.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func TestSnapshotRequestVerboseEqual(t *testing55.T) {
	popr := math_rand55.New(math_rand55.NewSource(time55.Now().UnixNano()))
	p := NewPopulatedSnapshotRequest(popr, false)
	data, err := code_google_com_p_gogoprotobuf_proto31.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &SnapshotRequest{}
	if err := code_google_com_p_gogoprotobuf_proto31.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}

//These tests are generated by code.google.com/p/gogoprotobuf/plugin/testgen
