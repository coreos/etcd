syntax = "proto3";
package mvccpb;

import "gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.goproto_enum_prefix_all) = false;

message Key {
    // key is the key in bytes. An empty key is not allowed.
    bytes key = 1;
    // create_revision is the revision of last creation on this key.
    int64 create_revision = 2;
    // mod_revision is the revision of last modification on this key.
    int64 mod_revision = 3;
    // version is the version of the key. A deletion resets
    // the version to zero and any modification of the key
    // increases its version.
    int64 version = 4;
    // lease is the ID of the lease that attached to key.
    // When the attached lease expires, the key will be deleted.
    // If lease is 0, then no lease is attached to the key.
    int64 lease = 5;
}

message KeyEvent {
    enum KeyEventType {
        PUT = 0;
        DELETE = 1;
    }
    // type is the kind of event. If type is a PUT, it indicates
    // new data has been stored to the key. If type is a DELETE,
    // it indicates the key was deleted.
    KeyEventType type = 1;
    // key holds the Key for the event.
    // A PUT event contains current key.
    // A PUT event with key.Version=1 indicates the creation of a key.
    // A DELETE/EXPIRE event contains the deleted key with
    // its modification revision set to the revision of deletion.
    Key key = 2;
}
