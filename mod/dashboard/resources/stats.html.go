package resources

import (
	"bytes"
	"compress/gzip"
	"io"
)

// stats_html returns raw, uncompressed file data.
func stats_html() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x09,0x6e,0x88,0x00,0xff,0x8c,0x54,
0xcb,0x6e,0xdb,0x30,0x10,0xbc,0xe7,0x2b,0x36,0xba,0xd3,0x3c,
0x14,0x45,0x92,0x82,0x12,0x90,0x16,0x39,0xe4,0x56,0xa0,0x28,
0xd0,0x22,0x08,0x02,0x9a,0x5c,0x5b,0x4c,0x25,0x2e,0x4b,0xae,
0xec,0xfa,0xef,0x4b,0x4a,0x56,0xa2,0x3c,0x5a,0xd8,0x07,0x6b,
0xc5,0xe5,0xcc,0x3e,0x66,0x6c,0x75,0x6e,0xc9,0xf0,0x21,0x20,
0xb4,0xdc,0x77,0xcd,0x99,0x3a,0x17,0xe2,0xce,0x6d,0xa0,0x63,
0xb8,0xbd,0x81,0x8b,0xfb,0x06,0xc6,0x8f,0x2a,0x59,0x30,0x9d,
0x4e,0xa9,0xae,0x3c,0x89,0xc7,0x94,0x6f,0x08,0x87,0x57,0xd3,
0xe3,0x72,0x7a,0x5c,0x54,0x0d,0xa8,0xf3,0x3b,0xf4,0xd6,0x6d,
0xee,0x85,0x78,0x66,0x5b,0x52,0x9d,0xc0,0xf6,0x1f,0x9a,0xcb,
0x53,0x68,0xfe,0x85,0xdf,0xf2,0x91,0xa2,0x1c,0x34,0xef,0xe0,
0x47,0xa0,0x10,0x2f,0xc0,0xa5,0x0e,0x6a,0x5b,0x82,0x1c,0xf6,
0xc8,0x1a,0x4c,0xab,0x63,0x42,0xae,0xab,0x81,0x37,0x22,0x77,
0xbb,0x48,0xb5,0xcc,0x41,0xe0,0xef,0xc1,0xed,0xea,0xea,0x87,
0xf8,0x7e,0x2d,0xbe,0x50,0x1f,0x34,0xbb,0x75,0x87,0x15,0x18,
0xf2,0x8c,0x3e,0xe3,0x6e,0x6f,0x6a,0xb4,0x5b,0x9c,0x91,0xec,
0xb8,0xc3,0x06,0xd9,0x58,0xf8,0x1c,0x69,0x9f,0x30,0x2a,0x39,
0x9d,0x2d,0x98,0xbd,0xee,0xb1,0xae,0x2c,0x26,0x13,0x5d,0x60,
0x47,0x7e,0xc1,0x57,0xbd,0xbd,0xb8,0x73,0xb8,0x0f,0x14,0x79,
0x71,0x6b,0xef,0x2c,0xb7,0xb5,0xc5,0x9d,0x33,0x28,0xc6,0x97,
0x19,0x97,0x67,0x86,0xaf,0x9d,0x36,0x08,0x1b,0x9d,0xb3,0xe4,
0x57,0xf9,0x0b,0xb4,0xb7,0xa0,0x43,0xe8,0x50,0x30,0x0d,0xa6,
0x15,0x63,0x22,0xf8,0x2d,0x38,0x0f,0xdc,0x22,0x44,0x22,0x06,
0xeb,0x22,0x1a,0xa6,0x78,0x80,0xb2,0xac,0xb3,0x27,0x6d,0x3a,
0xe7,0x7f,0x41,0xc4,0xae,0xae,0x12,0x1f,0x3a,0x4c,0x2d,0x62,
0xee,0xa5,0x8d,0xb8,0x99,0x4f,0x64,0xaf,0x9d,0x5f,0x99,0x94,
0xb7,0x7e,0xa6,0xe4,0xbc,0x63,0xb5,0x26,0x7b,0x00,0xbf,0x15,
0xb9,0x72,0x5d,0x95,0x9d,0x7c,0x63,0xcd,0x69,0xd1,0xe9,0x0b,
0x7b,0x1e,0x0b,0xaa,0x30,0xeb,0xb8,0x1e,0x17,0xd8,0x66,0xf4,
0xa1,0x6a,0x7e,0xd2,0x00,0x3a,0x22,0x0c,0xc9,0xe5,0xb6,0xb5,
0x07,0x95,0x38,0x92,0xdf,0x36,0x34,0xb0,0xd5,0x8c,0x56,0xc9,
0xe3,0x01,0x4c,0xb8,0xb8,0xca,0x7b,0x40,0x9d,0x10,0x94,0x3e,
0x36,0x5b,0x14,0xfd,0x24,0xe5,0x82,0x77,0x65,0xa8,0x97,0x55,
0x33,0x84,0x6d,0xd4,0x16,0xe1,0x40,0x43,0x9c,0xe1,0x4a,0xea,
0x06,0x98,0xc0,0xf5,0x21,0xd2,0xee,0x98,0xc3,0x3f,0x01,0xa3,
0x43,0x6f,0x70,0xa5,0x64,0x98,0x07,0x59,0x58,0xec,0x9d,0xd1,
0xae,0x9e,0x47,0x9b,0x04,0x87,0x14,0x4d,0x9e,0x8e,0xf6,0x18,
0x1f,0x72,0xfd,0x40,0x3e,0x6b,0x9a,0x24,0xa6,0x8f,0x22,0xb5,
0xae,0x7f,0x0a,0x56,0xc5,0xc5,0x79,0xac,0x11,0x74,0x1a,0xc7,
0x63,0x22,0xff,0x41,0x76,0x6e,0x3d,0x45,0xab,0x3e,0xcb,0xf2,
0x96,0xe5,0xfd,0x8e,0xe1,0xda,0xda,0x69,0xca,0xe4,0x18,0x81,
0xe2,0xe8,0x18,0x67,0x74,0x71,0xe8,0x6c,0x3d,0x68,0x31,0x8b,
0x30,0xfd,0x98,0x32,0xcc,0xba,0x1d,0x38,0x5b,0xc4,0xb5,0x0f,
0x69,0x14,0xb7,0xe8,0x5d,0x0c,0x3b,0x09,0x3e,0x6b,0x2d,0xf3,
0xc5,0xe6,0xd9,0x51,0xcb,0x19,0xa6,0x38,0xc9,0x11,0x2e,0x7a,
0xb2,0x43,0x36,0xd4,0xab,0xa6,0x4f,0x41,0x1e,0xdf,0x5e,0x21,
0x95,0x2c,0x26,0x1c,0x5d,0x59,0xfe,0x14,0xff,0x06,0x00,0x00,
0xff,0xff,0x95,0x89,0x83,0x4d,0x24,0x05,0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}

func init() {
	go_bindata["/stats.html"] = stats_html
}
